<!DOCTYPE html>
<html>

<!-- head -->
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>MSc Finance & Big Data - Data visualization 2020</title>

  <!-- bulma and font awesome -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.8.0/css/bulma.min.css" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css" crossorigin="anonymous">
</head>

<!-- body -->
<body>

  <!-- header -->
  <section class="hero is-info is-bold">
    <!-- todo: change assignment and name -->
    <div class="hero-body">
      <div class="container">
        <h1 class="title">
          Data Visualization Assignment
        </h1>
        <h2 class="subtitle">
          Carnot Pierre
        </h2>
      </div>
    </div>

    <!-- change navigation if needed -->
    <div class="hero-foot">
      <div class="container">
        <nav class="navbar" role="navigation" aria-label="main navigation">

          <div class="navbar-brand">
            <a class="navbar-item" href="#top">
              <span class="icon">
                <i class="fas fa-home"></i>
              </span>
              <span>Home</span>
            </a>
          </div>

          <div id="main-navbar" class="navbar-menu">
            <a class="navbar-item" href="#viz1">
              <span class="icon">
                <i class="fas fa-chart-area"></i>
              </span>
              <span>Visualization 1</span>
            </a>
          </div>

          <div class="navbar-end">
            <a class="navbar-item" href="#about">
              <span class="icon">
                <i class="fas fa-info-circle"></i>
              </span>
              <span>About</span>
            </a>
          </div>

        </nav>
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container content">
      <!-- modify if necessary (move visualizations in separate pages) -->
      <h2 id="viz1">Visualization 1</h2>

      https://raw.githubusercontent.com/pierrecarnot/individual-project/master/winrate_by_surface.png

      <h3>Interpretation</h3>

      <p>
       By looking at the graph, we can clearly see that Djokovic, Federer and Nadal have respectively the best winrate
       on the hard, grass and clay surface, whereas they have very close winrate together if you combine the 3 surfaces.
      </p>

      <h3>Discussion</h3>

      <p>
       The starting data was already clean and prepared, the result of the analysis were extracted relatively simply.
       I faced some difficulties to insert pictures at the right places, combining them with an arrow and knowing that my absciss
       is not made of numbers (but surface names). 
       I also asked myself if i would insert the winrate of Tsonga (player with relatively low winrate compared to the others), to
       give the reader a better appreciation of the difference of winrates between TOP 3 ATP player and TOP20 ATP player. I found 
       more interesting to just compare the 3 top players of the 2 last decades (56 grand slam won out of 65 by them since 2003).
      
      </p>

      <h3>Sources</h3>
      

      <p>
        Code : <br/>
 import numpy as np <br/>
 import pandas as pd <br/>
 import matplotlib.pyplot as plt <br/>
 from matplotlib.offsetbox import TextArea, DrawingArea, OffsetImage, AnnotationBbox <br/>
 import matplotlib.image as mpimg <br/> <br/> <br/>
 
 
 #import data for all the ATP tournaments 2000-2020, extracted from dataworld <br/>
 data = pd.read_csv(r"C:\Users\pierre\Desktop\msi\datavi\atp_matches_combined.csv", dtype='unicode') <br/>
 data.head() <br/> <br/> <br/>
 
 
 #FEDERER <br/>
 #Extract all the wins on the different surfaces <br/>
 hard_F_W = data[(data["winner"]  == "Federer R.") & (data["surface"]=="Hard") ] <br/>
 grass_F_W = data[(data["winner"]  == "Federer R.") & (data["surface"]=="Grass") ]  <br/>
 clay_F_W = data[(data["winner"]  == "Federer R.") & (data["surface"]=="Clay") ] <br/>
 #count the wins <br/>
 hard_F_W = len(hard_F_W) <br/>
 grass_F_W = len(grass_F_W) <br/>
 clay_F_W = len(clay_F_W) <br/>
 #Extract all the loses on the different surfaces <br/>
 hard_F_L = data[(data["loser"]  == "Federer R.") & (data["surface"]=="Hard") ] <br/>
 grass_F_L = data[(data["loser"]  == "Federer R.") & (data["surface"]=="Grass") ] <br/>
 clay_F_L = data[(data["loser"]  == "Federer R.") & (data["surface"]=="Clay") ] <br/>
 #count the loses <br/>
 hard_F_L = len(hard_F_L) <br/>
 grass_F_L = len(grass_F_L) <br/>
 clay_F_L = len(clay_F_L) <br/>
 #calculate the winrate of Federer on the 3 different surfaces <br/>
 WR_F_H = hard_F_W / (hard_F_W + hard_F_L) *100 <br/>
 WR_F_G = grass_F_W / (grass_F_W + grass_F_L) *100 <br/>
 WR_F_C = clay_F_W / (clay_F_W + clay_F_L) *100 <br/>
 ALL_F = (WR_F_H+WR_F_G+WR_F_C)/3 <br/>
 print(WR_F_H) <br/>
 print(WR_F_G) <br/>
 print(WR_F_C) <br/>
 print(ALL_F) <br/> <br/> <br/>
 
 
 #NADAL <br/>
 #Same for Nadal datas <br/>
 hard_N_W = data[(data["winner"]  == "Nadal R.") & (data["surface"]=="Hard") ] <br/>
 grass_N_W = data[(data["winner"]  == "Nadal R.") & (data["surface"]=="Grass") ] <br/>
 clay_N_W = data[(data["winner"]  == "Nadal R.") & (data["surface"]=="Clay") ] <br/>
 hard_N_W = len(hard_N_W) <br/>
 grass_N_W = len(grass_N_W) <br/>
 clay_N_W = len(clay_N_W) <br/> <br/>
 
 hard_N_L = data[(data["loser"]  == "Nadal R.") & (data["surface"]=="Hard") ] <br/>
 grass_N_L = data[(data["loser"]  == "Nadal R.") & (data["surface"]=="Grass") ] <br/>
 clay_N_L = data[(data["loser"]  == "Nadal R.") & (data["surface"]=="Clay") ] <br/>
 hard_N_L = len(hard_N_L) <br/>
 grass_N_L = len(grass_N_L) <br/>
 clay_N_L = len(clay_N_L) <br/> <br/>
 
 WR_N_H = hard_N_W / (hard_N_W + hard_N_L) *100 <br/>
 WR_N_G = grass_N_W / (grass_N_W + grass_N_L) *100 <br/>
 WR_N_C = clay_N_W / (clay_N_W + clay_N_L) *100 <br/>
 ALL_N = (WR_N_H+WR_N_G+WR_N_C)/3 <br/>
 print(WR_N_H) <br/>
 print(WR_N_G) <br/>
 print(WR_N_C) <br/>
 print(ALL_N) <br/> <br/> <br/>
 
 
 #Djokovic <br/>
 #Same for Djokovic datas <br/>
 hard_D_W = data[(data["winner"]  == "Djokovic N.") & (data["surface"]=="Hard") ] <br/>
 grass_D_W = data[(data["winner"]  == "Djokovic N.") & (data["surface"]=="Grass") ] <br/>
 clay_D_W = data[(data["winner"]  == "Djokovic N.") & (data["surface"]=="Clay") ] <br/>
 hard_D_W = len(hard_D_W) <br/>
 grass_D_W = len(grass_D_W) <br/>
 clay_D_W = len(clay_D_W) <br/>
 
 hard_D_L = data[(data["loser"]  == "Djokovic N.") & (data["surface"]=="Hard") ] <br/>
 grass_D_L = data[(data["loser"]  == "Djokovic N.") & (data["surface"]=="Grass") ] <br/>
 clay_D_L = data[(data["loser"]  == "Djokovic N.") & (data["surface"]=="Clay") ] <br/>
 hard_D_L = len(hard_D_L) <br/>
 grass_D_L = len(grass_D_L) <br/>
 clay_D_L = len(clay_D_L) <br/> <br/>
 
 WR_D_H = hard_D_W / (hard_D_W + hard_D_L) *100 <br/>
 WR_D_G = grass_D_W / (grass_D_W + grass_D_L) *100 <br/>
 WR_D_C = clay_D_W / (clay_D_W + clay_D_L) *100 <br/>
 ALL_D = (WR_D_H+WR_D_G+WR_D_C)/3 <br/> <br/>
 
 print(WR_D_H) <br/>
 print(WR_D_G) <br/>
 print(WR_D_C) <br/>
 print(ALL_D) <br/> <br/> <br/> <br/>
 
 
 
 #In this part, we draw the final graph: we want to draw the winrates according to the surface for the 3 players <br/> <br/>

 #Build the vectors of surfaces <br/>
 x= ['Hard', "Grass", "Clay","ALL"] <br/>
 #Vector of winrates for federer <br/>
 y1= [WR_F_H, WR_F_G, WR_F_C, ALL_F] <br/>
 #Vector of winrates for nadal <br/>
 y2= [WR_N_H, WR_N_G, WR_N_C, ALL_N] <br/> 
 #Vector of winrates for Djokovic <br/>
 y3= [WR_D_H, WR_D_G, WR_D_C, ALL_D] <br/> <br/>
 
 #create the fig, and the size of the  <br/>
 fig, ax = plt.subplots(figsize=(20,10)) <br/> <br/>

 #Create the graph, each player winrate by surface <br/>
 #Draw federer winrate points in triangle <br/>
 plt.scatter(x,y1,marker='v') <br/>
 #Draw Nadal winrate points in square <br/>
 plt.scatter(x,y2,marker='s') <br/>
 #Draw Djokovic winrate points in points <br/>
 plt.scatter(x,y3) <br/> <br/>
 
 #set the ordonate between 73% and 94% to have a better scale between the points <br/>
 plt.ylim([73, 94]) <br/> <br/>

 #Create graph legend <br/>
 plot_series=['Federer','Nadal','Djokovic'] <br/>
 ax.legend(plot_series, facecolor="w") <br/> <br/>

 #create titles <br/>
 plt.title('Winrate of Djokovic, Federer and Nadal for the ATP tour since January 2000 ',fontsize=16) <br/>
 plt.xlabel('Surface',fontsize=14) <br/>
 plt.ylabel('Winrate (%)',fontsize=14) <br/> <br/>

 #import pictures store on deskstop <br/>
 grass = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\grass3.jpg') <br/>
 hard = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\hard.jpg') <br/>
 clay = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\clay.jpg') <br/>
 atp = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\atp.png') <br/> <br/>

 #Create the box size and position of the pictures <br/>
 imagebox = OffsetImage(grass, zoom=0.3) <br/>
 abg = AnnotationBbox(imagebox, ('Grass', 74.5)) <br/> <br/>

 imagebox2 = OffsetImage(clay, zoom=0.3) <br/>
 abc = AnnotationBbox(imagebox2, ('Clay', 74.5)) <br/> <br/>

 imagebox3= OffsetImage(hard, zoom=0.3) <br/>
 abh = AnnotationBbox(imagebox3, ('Hard', 74.5)) <br/> <br/>
 
 imagebox4= OffsetImage(atp, zoom=0.3) <br/>
 aba = AnnotationBbox(imagebox4, ('ALL', 74.7)) <br/> <br/>

 #Draw the boxes on the graph <br/>
 ax.add_artist(abg) <br/>
 ax.add_artist(abc) <br/>
 ax.add_artist(abh) <br/>
 ax.add_artist(aba) <br/> <br/> <br/><br/>



 #import and put the picture of federer on the graph, with an arrow linked to the point <br/>
 federer = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\federer.jpg') <br/>
 xy = ('Grass', WR_F_G) <br/>
 imagebox5 = OffsetImage(federer, zoom=0.4) <br/> <br/>

 ab5 = AnnotationBbox(imagebox5, xy, <br/>
                      xybox=(60,50), <br/>
                      xycoords='data', <br/>
                      boxcoords="offset points", <br/>
                      pad=0.2, <br/>
                      arrowprops=dict(arrowstyle="-", color="k", alpha=0.6, connectionstyle='arc3, rad=-0.2') <br/>
                      ) <br/> <br/>

 ax.add_artist(ab5) <br/> <br/> <br/> <br/>



 #import and put the picture of Djokovic on the graph, with an arrow linked to the point <br/>
 djokovic = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\djokovic.jpg') <br/>
 xy2 = ('Hard', WR_D_H) <br/>
 imagebox6 = OffsetImage(djokovic, zoom=0.8) <br/> <br/>

 ab6 = AnnotationBbox(imagebox6, xy2, <br/>
                      xybox=(60,50), <br/>
                      xycoords='data', <br/>
                      boxcoords="offset points", <br/>
                      pad=0.1, <br/>
                      arrowprops=dict(arrowstyle="-", color="k", alpha=0.6, connectionstyle='arc3, rad=-0.2') <br/>
                      ) <br/> <br/>

 ax.add_artist(ab6) <br/> <br/> <br/> <br/>



 #import and put the picture of Nadal on the graph, with an arrow linked to the point <br/>
 nadal = mpimg.imread(r'C:\Users\pierre\Desktop\msi\datavi\nadal.jpg') <br/>
 xy3 = ('Clay', WR_N_C) <br/>
 imagebox7 = OffsetImage(nadal, zoom=0.6) <br/> <br/>

 ab7 = AnnotationBbox(imagebox7, xy3, <br/>
                      xybox=(90,1), <br/>
                      xycoords='data', <br/>
                      boxcoords="offset points", <br/>
                      pad=0.2, <br/>
                      arrowprops=dict(arrowstyle="-", color="k", alpha=0.6, connectionstyle='arc3, rad=0.2') <br/>
                      ) <br/> <br/>

 ax.add_artist(ab7) <br/> <br/> <br/> <br/>



 #save the graph into a png file <br/>
 plt.savefig('winrate_by_surface.png') <br/> <br/>
 
      </p>
    </div>
  </section>

  <hr class="container">

  <!-- about section -->
  <!-- fill in, or link to a personal web page  -->
  <section class="section">
    <div class="container content">
      <h2 id="about">
        About Me
      </h2>

      <div class="media">
        <div class="media-left">
          <p class="image is-128x128">
            <!-- replace with your profile image -->
            <img src="https://raw.githubusercontent.com/mscfinance-big-data-viz/indiv-assignment-template/master/Visualization%20of%20cholera%20deaths.png">
          </p>
        </div>

        <div class="media-content">
            <p>
              <!-- replace with your information -->
              <strong>Bennis Othmane</strong>
              <br/>
              Brief biography describing your interests and skills, a profile photo, and/or links to your Github, Linkedin, and other <strong>professional</strong> social media accounts.
              <br/>
              <!-- find brand icons at: https://fontawesome.com/icons?d=gallery&s=brands&m=free -->
              <a href="https://github.com/">
                <span class="fab fa-github"></span>
                <span>Github</span>
              </a>
              &bullet;
              <a href="https://www.linkedin.com/">
                <span class="fab fa-linkedin"></span>
                <span>LinkedIn</span>
              </a>
            </p>

        </div>
      </div>

    </div>
  </section>


  <footer class="footer">
    <div class="content has-text-centered">
      <small>
        <a href="#top">
          <span class="fas fa-arrow-up"></span>
          <span>Back to Top</span>
        </a>
        <br/>
        <a href="https://www.neoma-bs.fr/formations/masteres-specialises-masters-of-science-temps-partiel/msc-in-finance-and-big-data/presentation-du-programme">MSc Finance & Big Data / Data visualization</a>
        &bullet;
        <a href="https://https://www.neoma-bs.fr/">Neoma Business School</a>
      </small>
    </div>
  </footer>

</body>
</html>
